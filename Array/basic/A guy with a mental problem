A guy has to reach his home and does not want to be late. He takes train to reach home. He has a mental illness, so he always switches train at every station.
For eg: If he starts with train A then at station 2 he will switch his train to train B and so on. Similarly, if he starts with train B then he will switch to train A at station 2 and so on. Please help him to find the minimum total time he would take to reach his home.

 

Example 1:

Input:
N = 3
A[] = {2, 1, 2}
B[] = {3, 2, 1}
Output:
5
Explanation:
If he chose train A initially, then time to
reach home will be : 2 + 2 + 2 = 6 
If he Chose train B initially, then time to
reach home will be : 3 + 1 + 1 = 5
5 is minimum hence the answer.
 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function minTime() which takes the array A[], B[] and its size N as inputs and returns the minimum total time in seconds to reach home.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

 

Constraints:
1 ≤ N ≤ 106
1 ≤ Ai, Bi ≤ 106

solution:
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends

class Solution{
    public:
    long long minTime(long long a[], long long b[], long long n)
    {
            long long suma=0, sumb=0;
        
        for(long long i=0;i<n;i++){
            if(i%2==0)
                suma+=a[i];
            else
                sumb+=a[i];
        }
    
        for(long long i=0;i<n;i++){
            if(i%2!=0)
                suma+=b[i];
            else
                sumb+=b[i];
        }
    
        return min(suma,sumb);
             
             
    }
};

#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends

class Solution{
    public:
    long long minTime(long long a[], long long b[], long long n)
    {
            long long suma=0, sumb=0;
        
        for(long long i=0;i<n;i++){
            if(i%2==0)
                suma+=a[i];
            else
                sumb+=a[i];
        }
    
        for(long long i=0;i<n;i++){
            if(i%2!=0)
                suma+=b[i];
            else
                sumb+=b[i];
        }
    
        return min(suma,sumb);
             
             
    }
};


class Solution{
    public:
    long long minTime(long long a[], long long b[], long long n)
    {
            long long suma=0, sumb=0;
        
        for(long long i=0;i<n;i++){
            if(i%2==0)
                suma+=a[i];
            else
                sumb+=a[i];
        }
    
        for(long long i=0;i<n;i++){
            if(i%2!=0)
                suma+=b[i];
            else
                sumb+=b[i];
        }
    
        return min(suma,sumb);
             
             
    }
};
