Given a array a[] of non-negative integers. Count the number of pairs (i, j) in the array such that a[i] + a[j] < a[i]*a[j]. (the pair (i, j) and (j, i) are considered same and i should not be equal to j)


Example 1:

Input:
N=3
arr[] = {3, 4, 5} 
Output: 3
Explanation: Pairs are (3, 4) , (4, 5) and (3,5).  
 

Example 2:

Input:
N=3
arr[] = {1, 1, 1 } 
Output: 0

Your Task:
Since, this is a function problem. You don't need to take any input, as it is already accomplished by the driver code. You just need to complete the function CountPairs() that takes array arr and integer n as parameters and return the total number of pairs possible.

 

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).
solution:
#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends


class Solution
{
  public:
    int CountPairs (int arr[], int n)
    {
        //code here.
        int i,twocount=0,twogreatercount=0;
        for(i=0;i<n;i++)
        {
            if(arr[i]==2)
            {
                twocount++;
            }
            if(arr[i]>2)
            {
                twogreatercount++;
            }
        }
        int ans=twocount*twogreatercount+(twogreatercount*(twogreatercount-1))/2;
        return ans;
        
    }
};
