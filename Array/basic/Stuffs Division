Your are given N students with some goodies to be distrubuted among them such that student at ith index gets exactly i amount of goodies (considering no wastage). The goodies has already been distributed by some other. Your task is to check if it can be redistributed such that student at ith index gets i amount of goodies.
 

Example 1:

Input:
N = 5
Arr = {7, 4, 1, 1, 2}
Output:
YES
Explanation:
Since, all the goods can be
redistributed as 1 2 3 4 5 
(ith students get i number of 
goodies).So, output is YES.
 

Example 2:

Input:
N = 5
Arr = {1, 1, 1, 1, 1}
Output:
NO
 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function leftIndex() which takes the array Arr[] and its size N as inputs and returns  true if we can redistribute in the requried way, otherwise false .


Expected Time Complexity: O(LogN)
Expected Auxiliary Space: O(1)


Constraints:
1 <= N <= 107
0 <= Ai <= 1018

 solution:
 #include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


class Solution
{
  public:
    bool possible(long long arr[], long long n)
    {
        //code here.
        int sum=0,sum1=0,i;
        for(i=0;i<n;i++)
        {
            sum=sum+arr[i];
        }
        for(i=1;i<=n;i++)
        {
            sum1=sum1+i;
        }
        //cout<<sum<<" "<<sum1<<" ";
        if(sum==sum1)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
};
