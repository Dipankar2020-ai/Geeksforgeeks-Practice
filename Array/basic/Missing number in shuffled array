Given an array A of size N. The contents of A are copied into another array B and numbers are shuffled. Also, one element is removed from B. The task is to find the missing element.

 
Example 1:
Input : 
A[] = {4, 8, 1, 3, 7}
B[] = {7, 4, 3, 1}
Output : 8
Explanation:
8 is the only element missing from B.
 
Example 2:
Input : 
A[] = {12, 10, 15, 23, 11, 30}
B[] = {15, 12, 23, 11, 30}
Output : 10
 

Your Task:  
You don't need to read input or print anything. Your task is to complete the function findMissing() which takes the array A[], B[] and its size N and N-1, respectively as inputs and returns the missing number.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

 

Constraints:
2 <= N <= 106
1 <= A, B <= 1018
Array may also contain duplicates.

solution:

class Solution{
    public:
    long long findMissing(long long a[], long long b[], int n)
    {
      long long int sum=0,sum1=0,i;
        for(i=0;i<n;i++)
        {
            sum=sum+a[i];
        }
        for(i=0;i<n-1;i++)
        {
            sum1=sum1+b[i];
        }
        return (sum-sum1);
    }
};
